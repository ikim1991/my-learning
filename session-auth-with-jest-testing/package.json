{
  "name": "session-auth-with-jest-testing",
  "version": "1.0.0",
  "description": "1. Preflight Request from Client to validate and establish connection with server\r 2. HTTP Request Sent by Client\r 3. Check for Cross Origin Resource Sharing, CORS middleware\r 4. Check for session, express-session middleware\r 5. If login, validate credentials authorize, and initialize session\r 6. If existing session, pull from session store and authenticate\r 7. Handle HTTP Request\r 8. Send Response to Server",
  "main": "index.js",
  "scripts": {
    "prebuild": "rm -rf build",
    "build": "tsc",
    "dev": "env-cmd -f ./dev.env ts-node-dev --transpile-only --no-notify ./src",
    "test": "env-cmd -f ./test.env jest --forceExit",
    "start": "node ./build/index.js"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@types/connect-redis": "0.0.16",
    "@types/cors": "^2.8.10",
    "@types/mongodb": "^3.6.9",
    "@types/mongoose": "^5.10.3",
    "@types/redis": "^2.8.28",
    "bcryptjs": "^2.4.3",
    "connect-redis": "^5.1.0",
    "cors": "^2.8.5",
    "express": "^4.17.1",
    "express-session": "^1.17.1",
    "mongoose": "^5.11.19",
    "redis": "^3.0.2"
  },
  "devDependencies": {
    "@types/bcryptjs": "^2.4.2",
    "@types/express": "^4.17.11",
    "@types/express-session": "^1.17.3",
    "@types/jest": "^26.0.20",
    "@types/node": "^14.14.31",
    "@types/supertest": "^2.0.10",
    "env-cmd": "^10.1.0",
    "jest": "^26.6.3",
    "supertest": "^6.1.3",
    "ts-jest": "^26.5.3",
    "ts-node-dev": "^1.1.6",
    "typescript": "^4.2.3"
  }
}
